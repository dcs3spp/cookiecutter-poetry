[tool.black]
experimental-string-processing = true
exclude = '''/(\.eggs|\.git|\.hg\.mypy_cache|\.tox|\.venv|_build|buck-out|build|dist)/'''
line-length = 88

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.poetry]
name = "{{ cookiecutter.project_name }}"
version = "0.0.0"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.license }}"
readme = "README.md"
keywords = []

[tool.poetry.dependencies]
python = "{{ cookiecutter.python_version }}"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
bumpversion = "^0.6.0"
factory-boy = "^3.2.0"
flake8 = "^3.9.1"
isort = "^5.8.0"
pytest = "^6.2.3"
pytest-watch = "^4.2.0"
pytest-testmon = "^1.1.0"
pre-commit = "^2.12.1"
pytest-cov = "^2.11.1"
pytest-deadfixtures = "^2.2.1"
pytest-mock = "^3.6.0"

[tool.pytest.ini_options]
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
testpaths=["tests"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

